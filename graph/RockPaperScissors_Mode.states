// Prueba
digraph {
	"1-0-0-0-0-0-" [label="Sin apuestas"]
	"0-2-0-0-0-0-" [label="Solo apuesta 2"]
	"1-0-0-0-0-0-" -> "0-2-0-0-0-0-" [label="choicePlayer1(choice);"]
	"1-0-0-0-0-0-" [label="Sin apuestas"]
	"0-0-3-0-0-0-" [label="Solo apuesta 1"]
	"1-0-0-0-0-0-" -> "0-0-3-0-0-0-" [label="choicePlayer2(choice);"]
	"0-0-3-0-0-0-" [label="Solo apuesta 1"]
	"0-0-0-4-0-0-" [label="Apuestan ambos y gana 1"]
	"0-0-3-0-0-0-" -> "0-0-0-4-0-0-" [label="choicePlayer1(choice);"]
	"0-2-0-0-0-0-" [label="Solo apuesta 2"]
	"0-0-0-4-0-0-" [label="Apuestan ambos y gana 1"]
	"0-2-0-0-0-0-" -> "0-0-0-4-0-0-" [label="choicePlayer2(choice);"]
	"0-0-0-4-0-0-" [label="Apuestan ambos y gana 1"]
	"0-0-0-4-0-0-" [label="Apuestan ambos y gana 1"]
	"0-0-0-4-0-0-" -> "0-0-0-4-0-0-" [label="determineWinner();"]
	"0-0-3-0-0-0-" [label="Solo apuesta 1"]
	"0-0-0-0-5-0-" [label="Apuestan ambos y gana 2"]
	"0-0-3-0-0-0-" -> "0-0-0-0-5-0-" [label="choicePlayer1(choice);"]
	"0-2-0-0-0-0-" [label="Solo apuesta 2"]
	"0-0-0-0-5-0-" [label="Apuestan ambos y gana 2"]
	"0-2-0-0-0-0-" -> "0-0-0-0-5-0-" [label="choicePlayer2(choice);"]
	"0-0-0-0-5-0-" [label="Apuestan ambos y gana 2"]
	"0-0-0-0-5-0-" [label="Apuestan ambos y gana 2"]
	"0-0-0-0-5-0-" -> "0-0-0-0-5-0-" [label="determineWinner();"]
	"0-0-3-0-0-0-" [label="Solo apuesta 1"]
	"0-0-0-0-0-6-" [label="Apuestan ambos y gana Owner"]
	"0-0-3-0-0-0-" -> "0-0-0-0-0-6-" [label="choicePlayer1(choice);"]
	"0-2-0-0-0-0-" [label="Solo apuesta 2"]
	"0-0-0-0-0-6-" [label="Apuestan ambos y gana Owner"]
	"0-2-0-0-0-0-" -> "0-0-0-0-0-6-" [label="choicePlayer2(choice);"]
	"0-0-0-0-0-6-" [label="Apuestan ambos y gana Owner"]
	"0-0-0-0-0-6-" [label="Apuestan ambos y gana Owner"]
	"0-0-0-0-0-6-" -> "0-0-0-0-0-6-" [label="determineWinner();"]
	init [label=init]
	"1-0-0-0-0-0-" [label="Sin apuestas"]
	init -> "1-0-0-0-0-0-" [label=constructor]
}

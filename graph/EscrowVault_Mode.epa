// Prueba
digraph {
	"0-0-0-0-0-0-7-" [label="refund(investor);
"]
	"0-0-0-0-0-0-7-" [label="refund(investor);
"]
	"0-0-0-0-0-0-7-" -> "0-0-0-0-0-0-7-" [label="refund(investor);"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"0-0-0-0-0-0-0-" [label=Vacio
]
	"1-0-3-4-5-0-0-" -> "0-0-0-0-0-0-0-" [label="close();"]
	"1-2-0-0-0-6-0-" [label="deposit(investor);
setGoalReached();
enableRefunds();
"]
	"0-0-0-0-0-0-7-" [label="refund(investor);
"]
	"1-2-0-0-0-6-0-" -> "0-0-0-0-0-0-7-" [label="enableRefunds();"]
	"1-2-0-0-0-6-0-" [label="deposit(investor);
setGoalReached();
enableRefunds();
"]
	"1-2-0-0-0-6-0-" [label="deposit(investor);
setGoalReached();
enableRefunds();
"]
	"1-2-0-0-0-6-0-" -> "1-2-0-0-0-6-0-" [label="deposit(investor);"]
	"1-2-0-0-0-6-0-" [label="deposit(investor);
setGoalReached();
enableRefunds();
"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"1-2-0-0-0-6-0-" -> "1-0-3-4-5-0-0-" [label="setGoalReached();"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"1-0-3-4-5-0-0-" -> "1-0-3-4-5-0-0-" [label="deposit(investor);"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"1-0-3-4-5-0-0-" -> "1-0-3-4-5-0-0-" [label="withdraw(_amount);"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"1-0-3-4-5-0-0-" [label="deposit(investor);
withdraw(_amount);
withdrawAll();
close();
"]
	"1-0-3-4-5-0-0-" -> "1-0-3-4-5-0-0-" [label="withdrawAll();"]
	init [label=init]
	"1-2-0-0-0-6-0-" [label="deposit(investor);
setGoalReached();
enableRefunds();
"]
	init -> "1-2-0-0-0-6-0-" [label=constructor]
}
